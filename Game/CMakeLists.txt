cmake_minimum_required(VERSION 3.30.3)

# 반드시 project 호출 전에 위치해야 함.
if(WIN32)
  set(VCPKG_PATH "$ENV{VCPKG_ROOT}")
  string(REPLACE "\\" "/" VCPKG_PATH "${VCPKG_PATH}")
  set(CMAKE_TOOLCHAIN_FILE "${VCPKG_PATH}/scripts/buildsystems/vcpkg.cmake")
else()
  # Windows가 아닌 경우(Linux, macOS 등)에는 경로를 그대로 사용.
  set(CMAKE_TOOLCHAIN_FILE "$ENV{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake")
endif()

set(PROJECT_NAME "Avoid")
project(${PROJECT_NAME} LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})

find_package(raylib CONFIG REQUIRED)
find_package(glm CONFIG REQUIRED)

# 여기서부터 프로젝트 세팅 시작...
set(GAME_PROJECT_NAME "Game")
set(GAME_EXE_NAME "Avoid")
set(GAME_PROJECT_PATH ${CMAKE_CURRENT_SOURCE_DIR})

set(GAME_SOURCE_PATH "${GAME_PROJECT_PATH}/Source")
set(GAME_SCRIPT_PATH "${GAME_PROJECT_PATH}/Script")
set(GAME_BATCH_PATH "${GAME_PROJECT_PATH}/Batch")
set(GAME_PROJECT_HEADER_FILE_PATH "${GAME_SOURCE_PATH}/Inc")
set(GAME_PROJECT_SOURCE_FILE_PATH "${GAME_SOURCE_PATH}/Src")

file(GLOB_RECURSE GAME_SOURCE "${GAME_SOURCE_PATH}/**")
file(GLOB_RECURSE GAME_SCRIPT "${GAME_SCRIPT_PATH}/**")
file(GLOB_RECURSE GAME_BATCH "${GAME_BATCH_PATH}/**")
file(GLOB_RECURSE GAME_HEADER_FILE "${GAME_PROJECT_HEADER_FILE_PATH}/**")
file(GLOB_RECURSE GAME_SOURCE_FILE "${GAME_PROJECT_SOURCE_FILE_PATH}/**")

find_path(RAYGUI_INCLUDE_DIRS "raygui.h")

add_executable(
  ${GAME_PROJECT_NAME} 
  ${GAME_SOURCE} 
  ${GAME_SCRIPT} 
  ${GAME_BATCH} 
  ${GAME_HEADER_FILE} 
  ${GAME_SOURCE_FILE}
)
target_include_directories(${GAME_PROJECT_NAME} PUBLIC ${GAME_PROJECT_HEADER_FILE_PATH} ${GAME_PROJECT_SOURCE_FILE_PATH} ${RAYGUI_INCLUDE_DIRS})
target_link_libraries(${GAME_PROJECT_NAME} PUBLIC raylib glm::glm)

target_compile_definitions(
    ${GAME_PROJECT_NAME}
    PUBLIC
    $<$<CONFIG:Debug>:DEBUG_MODE>
    $<$<CONFIG:Release>:RELEASE_MODE>
    $<$<CONFIG:RelWithDebInfo>:RELWITHDEBINFO_MODE>
    $<$<CONFIG:MinSizeRel>:MINSIZEREL_MODE>
)

set_target_properties(
  ${GAME_PROJECT_NAME} 
  PROPERTIES
  OUTPUT_NAME "${GAME_EXE_NAME}_$<CONFIG>"
)

set_property(TARGET ${GAME_PROJECT_NAME} PROPERTY MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
set_property(TARGET ${GAME_PROJECT_NAME} PROPERTY VS_DEBUGGER_WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}")

source_group(TREE "${GAME_SOURCE_PATH}" PREFIX "Source" FILES ${GAME_SOURCE})
source_group(TREE "${GAME_SCRIPT_PATH}" PREFIX "Script" FILES ${GAME_SCRIPT})
source_group(TREE "${GAME_BATCH_PATH}" PREFIX "Batch" FILES ${GAME_BATCH})
source_group(TREE "${GAME_PROJECT_HEADER_FILE_PATH}" PREFIX "Source/Inc" FILES ${GAME_HEADER_FILE})
source_group(TREE "${GAME_PROJECT_SOURCE_FILE_PATH}" PREFIX "Source/Src" FILES ${GAME_SOURCE_FILE})
# 여기까지 프로젝트 세팅 종료...

set_property(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT Game)